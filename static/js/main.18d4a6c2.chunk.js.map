{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isStarted","isReversed","sortType","NONE","start","setState","sortByAlphabet","ALPHABET","sortByLength","LENGTH","reverse","reset","this","goods","visibleGoods","sort","g1","g2","localeCompare","length","getReorderedGoods","className","type","onClick","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAgBKA,E,kFAbCC,EAAkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KA2CE,IAAME,EAAb,4MACEC,MAAQ,CACNC,WAAW,EACXC,YAAY,EACZC,SAAUN,EAASO,MAJvB,EAOEC,MAAQ,WACN,EAAKC,SAAS,CACZL,WAAW,KATjB,EAaEM,eAAiB,WACf,EAAKD,SAAS,CACZJ,YAAY,EACZC,SAAUN,EAASW,YAhBzB,EAoBEC,aAAe,WACb,EAAKH,SAAS,CACZJ,YAAY,EACZC,SAAUN,EAASa,UAvBzB,EA2BEC,QAAU,WACR,EAAKL,UAAS,SAAAN,GAAK,MAAK,CACtBE,YAAaF,EAAME,gBA7BzB,EAiCEU,MAAQ,WACN,EAAKN,SAAS,CACZJ,YAAY,EACZC,SAAUN,EAASO,QApCzB,4CAwCE,WAA2B,IAAD,OACxB,EAA4CS,KAAKb,MAAzCC,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,WAAYC,EAA/B,EAA+BA,SACzBW,EA9EV,SACEA,EACAX,EACAD,GAGA,IAAMa,EAAY,YAAOD,GAgBzB,OAZAC,EAAaC,MAAK,SAACC,EAAIC,GACrB,OAAQf,GACN,KAAKN,EAASW,SACZ,OAAOS,EAAGE,cAAcD,GAE1B,KAAKrB,EAASa,OACZ,OAAOO,EAAGG,OAASF,EAAGE,OACxB,QACE,OAAO,MAITlB,EACKa,EAAaJ,UAGfI,EAoDSM,CAAkBvB,EAAiBK,EAAUD,GAE3D,OACE,sBAAKoB,UAAU,MAAf,WACIrB,GACA,wBACEsB,KAAK,SACLC,QAAS,WACP,EAAKnB,SAHT,mBAUDJ,GACC,qCACE,wBACEsB,KAAK,SACLC,QAAS,WACP,EAAKjB,kBAHT,iCASA,wBACEgB,KAAK,SACLC,QAAS,WACP,EAAKf,gBAHT,4BASA,wBACEc,KAAK,SACLC,QAAS,WACP,EAAKb,WAHT,qBASA,wBACEY,KAAK,SACLC,QAAS,WACP,EAAKZ,SAHT,mBASA,oBAAIU,UAAU,QAAd,SACGR,EAAMW,KAAI,SAAAC,GAAI,OACb,oBAEEJ,UAAU,cAFZ,SAIGI,GAHIA,kBAlGvB,GAAyBC,IAAMC,WCxD/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.18d4a6c2.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\n// Use this function in the render method\nfunction getReorderedGoods(\n  goods: string[],\n  sortType: SortType,\n  isReversed: boolean,\n) {\n  // Not to mutate the original array\n  const visibleGoods = [...goods];\n\n  // Sort and reverse goods if needed\n  // ...\n  visibleGoods.sort((g1, g2) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return g1.localeCompare(g2);\n\n      case SortType.LENGTH:\n        return g1.length - g2.length;\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    return visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\n// DON'T save goods to the state\ntype State = {\n  isStarted: boolean,\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    isStarted: false,\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  start = () => {\n    this.setState({\n      isStarted: true,\n    });\n  };\n\n  sortByAlphabet = () => {\n    this.setState({\n      isReversed: false,\n      sortType: SortType.ALPHABET,\n    });\n  };\n\n  sortByLength = () => {\n    this.setState({\n      isReversed: false,\n      sortType: SortType.LENGTH,\n    });\n  };\n\n  reverse = () => {\n    this.setState(state => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  reset = () => {\n    this.setState({\n      isReversed: false,\n      sortType: SortType.NONE,\n    });\n  };\n\n  render(): React.ReactNode {\n    const { isStarted, isReversed, sortType } = this.state;\n    const goods = getReorderedGoods(goodsFromServer, sortType, isReversed);\n\n    return (\n      <div className=\"App\">\n        {!isStarted && (\n          <button\n            type=\"button\"\n            onClick={() => {\n              this.start();\n            }}\n          >\n            Start\n          </button>\n        )}\n\n        {isStarted && (\n          <>\n            <button\n              type=\"button\"\n              onClick={() => {\n                this.sortByAlphabet();\n              }}\n            >\n              Sort alphabetically\n            </button>\n\n            <button\n              type=\"button\"\n              onClick={() => {\n                this.sortByLength();\n              }}\n            >\n              Sort by length\n            </button>\n\n            <button\n              type=\"button\"\n              onClick={() => {\n                this.reverse();\n              }}\n            >\n              Reverse\n            </button>\n\n            <button\n              type=\"button\"\n              onClick={() => {\n                this.reset();\n              }}\n            >\n              Reset\n            </button>\n\n            <ul className=\"Goods\">\n              {goods.map(good => (\n                <li\n                  key={good}\n                  className=\"Goods__item\"\n                >\n                  {good}\n                </li>\n              ))}\n            </ul>\n          </>\n        )}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}